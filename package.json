{
  "name": "transportation-management-system",
  "version": "0.0.1",
  "description": "Transportation Management System devided into multiple services: user, vehicle, tracking, and traffic services",
  "author": "Yaser Alazm",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "dev": "./scripts/start-local-dev.sh",
    "dev:microservices": "./scripts/start-microservices-dev.sh",
    "dev:stop": "./scripts/stop-local-dev.sh",
    "dev:status": "./scripts/dev-status.sh",
    "dev:infra": "docker-compose -f docker-compose.dev.yml up -d",
    "dev:infra:stop": "docker-compose -f docker-compose.dev.yml down",
    "dev:infra:logs": "docker-compose -f docker-compose.dev.yml logs -f",
    "dev:reset": "./scripts/reset-dev-environment.sh",
    "dev:test-db": "./scripts/test-db-connection.sh",
    "dev:test-kafka": "./scripts/test-kafka-connection.sh",
    "dev:install": "./scripts/install-dependencies.sh",
    "dev:fix-kafka": "./scripts/fix-kafka-cluster-id.sh",
    "dev:clean-ports": "./scripts/clean-dev-ports.sh",
    "dev:seed": "./scripts/seed-databases.sh",
    "service:start": "./scripts/service-manager.sh start",
    "service:stop": "./scripts/service-manager.sh stop",
    "service:restart": "./scripts/service-manager.sh restart",
    "service:health": "./scripts/service-manager.sh health",
    "service:status": "./scripts/service-manager.sh status",
    "service:install": "./scripts/service-manager.sh install",
    "update:common": "./scripts/update-common-package.sh",
    "update:common:quick": "./scripts/quick-update-common.sh"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "concurrently": "^8.2.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^29.7.0",
    "nodemon": "^3.1.10",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
