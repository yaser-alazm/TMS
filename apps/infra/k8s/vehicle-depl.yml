apiVersion: apps/v1
kind: Deployment
metadata:
  name: vehicle-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vehicle-service
  template:
    metadata:
      labels:
        app: vehicle-service
    spec:
      tolerations:
        - key: 'node.kubernetes.io/not-ready'
          operator: 'Exists'
          effect: 'NoSchedule'
        - key: 'node.gke.io/balloon-pod-resize'
          operator: 'Exists'
          effect: 'NoSchedule'
      containers:
        - name: vehicle-service
          # image: yaseralazm/vehicle-service
          image: gcr.io/tms-dev-464113/vehicle-service
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres-srv:5432/vehicle-srv?schema=public
            - name: JWT_SECRET
              value: your-super-secret-key-change-this-in-production
            - name: NODE_ENV
              value: development # Change this manually for prod
            - name: PORT
              value: '4002'
            - name: KAFKA_BROKERS
              value: kafka-srv:9092
            - name: KAFKA_CLIENT_ID
              value: vehicle-service
          ports:
            - containerPort: 4002
          resources:
            requests:
              memory: '256Mi'
              cpu: '250m'
            limits:
              memory: '512Mi'
              cpu: '500m'
      initContainers:
        - name: wait-for-postgres
          image: postgres:16-alpine
          command:
            - sh
            - -c
            - |
              until pg_isready -h postgres-srv -p 5432 -U postgres; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
          resources:
            requests:
              memory: '64Mi'
              cpu: '100m'
            limits:
              memory: '128Mi'
              cpu: '200m'
        - name: create-db
          image: postgres:16-alpine
          command:
            - sh
            - -c
            - |
              echo "Creating vehicle-srv database if it doesn't exist..."
              PGPASSWORD=postgres psql -h postgres-srv -p 5432 -U postgres -c "CREATE DATABASE \"vehicle-srv\" WITH OWNER postgres ENCODING 'UTF8';" || echo "Database may already exist"
        - name: migrate
          # image: yaseralazm/vehicle-service
          image: gcr.io/tms-dev-464113/vehicle-service
          env:
            - name: DATABASE_URL
              value: postgresql://postgres:postgres@postgres-srv:5432/vehicle-srv?schema=public
          command:
            - npx
            - prisma
            - migrate
            - deploy
          resources:
            requests:
              memory: '256Mi'
              cpu: '250m'
            limits:
              memory: '512Mi'
              cpu: '500m'
---
apiVersion: v1
kind: Service
metadata:
  name: vehicle-srv
spec:
  selector:
    app: vehicle-service
  ports:
    - protocol: TCP
      port: 4002
      targetPort: 4002
  type: ClusterIP
